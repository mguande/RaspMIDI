// Script de corre√ß√£o para o problema de travamento da navega√ß√£o
// Execute este c√≥digo no console do navegador (F12)

console.log("üîß Aplicando corre√ß√£o de navega√ß√£o...");

// Fun√ß√£o para for√ßar navega√ß√£o para uma se√ß√£o
function forceNavigateToSection(sectionName) {
    console.log(`üß≠ For√ßando navega√ß√£o para: ${sectionName}`);
    
    // Remove active de todos os itens do menu
    const menuItems = document.querySelectorAll('.menu-item');
    menuItems.forEach(menuItem => menuItem.classList.remove('active'));
    
    // Remove active de todas as se√ß√µes
    const contentSections = document.querySelectorAll('.content-section');
    contentSections.forEach(section => section.classList.remove('active'));
    
    // Adiciona active ao item correto
    const targetItem = document.querySelector(`[data-section="${sectionName}"]`);
    if (targetItem) {
        targetItem.classList.add('active');
        console.log(`‚úÖ Menu item ativado: ${sectionName}`);
    } else {
        console.warn(`‚ö†Ô∏è Menu item n√£o encontrado: ${sectionName}`);
    }
    
    // Adiciona active √† se√ß√£o correta
    const targetSection = document.getElementById(sectionName);
    if (targetSection) {
        targetSection.classList.add('active');
        console.log(`‚úÖ Se√ß√£o ativada: ${sectionName}`);
    } else {
        console.warn(`‚ö†Ô∏è Se√ß√£o n√£o encontrada: ${sectionName}`);
    }
    
    // Atualiza URL hash
    window.location.hash = sectionName;
}

// Fun√ß√£o para recarregar patches com tratamento de erro
async function forceReloadPatches() {
    try {
        console.log("üîÑ For√ßando recarregamento de patches...");
        
        const response = await fetch('/api/patches');
        console.log("üì• Resposta recebida, status:", response.status);
        
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        
        const data = await response.json();
        console.log("üìã Dados dos patches:", data);
        
        if (data.success) {
            console.log(`‚úÖ ${data.data.length} patches carregados`);
            
            // Atualiza a vari√°vel global de patches
            if (window.app && window.app.patches) {
                window.app.patches = data.data;
                console.log("‚úÖ Vari√°vel de patches atualizada");
                
                // For√ßa renderiza√ß√£o
                if (window.app.renderPatches) {
                    window.app.renderPatches();
                    console.log("‚úÖ Patches renderizados");
                }
            } else {
                console.warn("‚ö†Ô∏è Objeto app n√£o encontrado");
            }
        } else {
            console.error("‚ùå Erro na resposta:", data.error);
        }
        
    } catch (error) {
        console.error('‚ùå Erro ao recarregar patches:', error);
    }
}

// Fun√ß√£o para limpar cache e for√ßar recarregamento
async function forceClearAndReload() {
    try {
        console.log("üßπ Limpando cache...");
        
        const response = await fetch('/api/cache/reload', {
            method: 'POST'
        });
        
        const data = await response.json();
        if (data.success) {
            console.log("‚úÖ Cache limpo");
        } else {
            console.warn("‚ö†Ô∏è Erro ao limpar cache:", data.error);
        }
        
        // Recarrega patches
        await forceReloadPatches();
        
    } catch (error) {
        console.error('‚ùå Erro ao limpar cache:', error);
    }
}

// Fun√ß√£o principal de corre√ß√£o
async function applyFix() {
    console.log("üöÄ Iniciando corre√ß√£o...");
    
    // 1. For√ßa navega√ß√£o para patches
    forceNavigateToSection('patches');
    
    // 2. Aguarda um pouco
    await new Promise(resolve => setTimeout(resolve, 500));
    
    // 3. Limpa cache e recarrega patches
    await forceClearAndReload();
    
    console.log("‚úÖ Corre√ß√£o aplicada!");
}

// Executa a corre√ß√£o
applyFix();

// Adiciona fun√ß√µes ao objeto global para uso manual
window.forceNavigateToSection = forceNavigateToSection;
window.forceReloadPatches = forceReloadPatches;
window.forceClearAndReload = forceClearAndReload;
window.applyFix = applyFix;

console.log("üîß Fun√ß√µes dispon√≠veis:");
console.log("  - applyFix() - Aplica corre√ß√£o completa");
console.log("  - forceNavigateToSection('patches') - Navega para patches");
console.log("  - forceReloadPatches() - Recarrega patches");
console.log("  - forceClearAndReload() - Limpa cache e recarrega"); 